user nginx;
worker_processes 4;
pid /run/nginx.pid;
daemon off;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

error_log  /var/log/nginx/error.log info;
worker_rlimit_nofile 200000;

events {
  use epoll;
  worker_connections 100000;
  multi_accept on;
}

http {
  vhost_traffic_status_zone;

  log_format proxy '[proxy|$config_name] $time_iso8601 | upstream: cache $upstream_cache_status, status $upstream_status = $status '
                   '- $request_method "$scheme" "$host" "$request_uri" | client $remote_addr '
                   '| sent $body_bytes_sent, gzip $gzip_ratio | "$sent_http_content_type" | http-ref "$http_referer" | '
                   'sent-to "$server" | agent "$http_user_agent" | x-fwd-for "$http_x_forwarded_for"';
  log_format static '[static|$config_name] $time_iso8601 | $remote_addr | usr $remote_user | host $host "$request"'
                  ' = $status | sent $body_bytes_sent, gzip $gzip_ratio | "$sent_http_content_type" | http-ref "$http_referer" | '
                  'sent-to "$server" | agent "$http_user_agent" | x-fwd-for "$http_x_forwarded_for"';
  log_format main '[main] $time_iso8601 | $remote_addr | usr $remote_user | "$request"'
                  ' = $status | sent $body_bytes_sent, gzip $gzip_ratio | "$sent_http_content_type" | http-ref "$http_referer" | '
                  'agent "$http_user_agent" | x-fwd-for "$http_x_forwarded_for"';
  
  log_format json_combined escape=json
    '{'
      '"body_bytes_sent":"$body_bytes_sent",'
      '"bytes_sent":"$bytes_sent",'
      '"connection":"$connection",'
      '"connection_requests":"$connection_requests",'
      '"config_name":"$config_name",'
      '"gzip_ratio":"$gzip_ratio",'
      '"host":"$host",'
      '"http_referer":"$http_referer",'
      '"http_user_agent":"$http_user_agent",'
      '"http_x_forwarded_for":"$http_x_forwarded_for",'
      '"msec":"$msec",'
      '"remote_addr":"$remote_addr",'
      '"remote_user":"$remote_user",'
      '"request":"$request",'
      '"request_id":"$request_id",'
      '"request_length":"$request_length",'
      '"request_method":"$request_method",'
      '"request_time":"$request_time",'
      '"sent_http_content_type":"$sent_http_content_type",'
      '"server":"$server",'
      '"ssl_protocol":"$ssl_protocol",'
      '"ssl_cipher":"$ssl_cipher",'
      '"status":"$status",'
      '"time":"$time_iso8601",'
      '"upstream_connect_time":"$upstream_connect_time",'
      '"upstream_cache_status":"$upstream_cache_status",'
      '"upstream_header_time":"$upstream_header_time",'
      '"upstream_response_time":"$upstream_response_time",'
      '"upstream_status":"$upstream_status"'
    '}';  

  access_log /var/log/nginx/access.log json_combined;

  #access_log /var/log/nginx/access.log main;

  include /etc/nginx/mime.types;
  include /etc/nginx/basic.conf;


	# Local subnets:
	set_real_ip_from 10.0.0.0/8;
	set_real_ip_from 172.16.0.0/12; # Includes Docker subnet
	set_real_ip_from 192.168.0.0/16;
	set_real_ip_from 192.168.1.0/16;
	real_ip_header X-Real-IP;
	real_ip_recursive on;

  include cors-servers.conf;
  include /etc/nginx/includes/gzip.conf;
  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/status.conf;
}
